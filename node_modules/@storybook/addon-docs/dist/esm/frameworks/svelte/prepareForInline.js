import React from 'react'; // @ts-ignore

import HOC from './HOC.svelte';
export var prepareForInline = function prepareForInline(storyFn, context) {
  var el = React.useRef(null);
  React.useEffect(function () {
    var cancelled = false;
    var applyLoaders = context.applyLoaders,
        unboundStoryFn = context.unboundStoryFn;
    var cpn;
    applyLoaders().then(function (storyContext) {
      if (!cancelled) {
        cpn = new HOC({
          target: el.current,
          props: {
            storyContext: storyContext,
            unboundStoryFn: unboundStoryFn
          }
        });
      }
    });
    return function () {
      cancelled = true;

      if (cpn) {
        cpn.$destroy();
      }
    };
  });
  return /*#__PURE__*/React.createElement('div', {
    ref: el
  });
};